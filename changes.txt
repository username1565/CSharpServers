Add feedback form in HttpResponse.cs
Add HttpForms.cs
Use value.ToString(); in HttpRequest.cs
Add folder "/messages/" to save messages there.
___________________________________________________
Add TcpUdpServer.cs
Change HTTPServer.cs, to run this.
Rewrite TCPClientObject.cs, show TCP there, instead of message, and return message, without UpperCase.
Add 4 files in ConsoleClients folder:
	TcpUdpClients.cs
	TcpUdpClients.bat
	TcpUdpClients.sh
	ConsoleTCPUDPClient.cs
	ConsoleTCPUDPClient.bat
	ConsoleTCPUDPClient.sh

Now it's TCP/UDP/HTTP Server, and TCP/UDP/HTTP-clients can be connected on the same port.
___________________________________________________

Rewrite TcpServer.cs, comment old code, and add new code from this source: https://metanit.com/sharp/net/4.3.php
Add file TCPClientObject.cs, with code, to handle connected client, in new Thread.
Rewrite TcpRequest.cs, comment old code, and add new code from that source.
Rewrite HttpRequest.cs, add methods to extract request-properties, and return this, as Dictionary.
Rewrite HttpResonse.cs, add method to add headers for response, and use this method to buidld response.
Add folder ConsoleClients, and put three files there:
	ConsoleClient.cs
	ConsoleClient.bat	- change port to 8082 here.
	ConsoleClient.sh	- change port to 8082 here.

Rewrite TcpResponse.cs, to return echo messages, from "ConsoleClient".
___________________________________________________

Split HTTPServer.cs to 6 files:
	TcpServer.cs
	HttpRequest.cs
	HttpResonse.cs
	HTTPServer.cs
	TcpRequest.cs
	TcpResponse.cs

Rewrite Compile.bat to build all files, with /main:HttpServer.HttpServer, on windows
Rewrite Compile.sh to build all files, with /main:HttpServer.HttpServer on linux, with mono

___________________________________________________
Return files from www-folder

Add method Combine to combine bytes of headers, and bytes of file-content.
Set port 8080 as default.
Read port from args[0], if port is specified (first argument).
Listen port on IPAddress.Any (0.0.0.0)
Show IP and PORT, after start server
If not root address, and if file exists - read file, and return file content as html-text, or as binary data;
Do not show response in console.log, because binary content not displaying correctly.

Compile.bat: run compiled HTTPServer.exe with another port 8082

Now, any file from "www/"-folder, can be downloaded there: http://127.0.0.1:8082/filename.extension

Add "test.html" and "test.txt" in 
http://127.0.0.1:8082/test.html
http://127.0.0.1:8082/test.txt

Add GetBytes.html
http://127.0.0.1:8082/GetBytes.html (return bytes of test.txt, in console.log)

___________________________________________________
Add Compile.bat to compile this server on windows.
Add Compile.sh to compile this server on linux, with mono.
___________________________________________________
source: https://gist.github.com/vvakame/2633887
