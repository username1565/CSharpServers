Fix upload attachments, and rewrite database.

feedback.sqlite3.sql - rewrite database. Now, here 3 tables. 
PISDA.cs - Add Or to AddRow, to add row with INSERT OR (REPLACE/IGNORE). Add blob for ExecuteScalar, to run SQL select by blob with bytes.
HTTPServer.cs - use captcha if specified in second arg.
Compile.bat, Compile.sh - use capthca to run HTTPServer.exe
HttpResponse.cs:
	UseCaptcha - false, by default.
	return binary response by /attachment/id, not a string.
	rewrite main page of feedback-form.
	add /upload - handler, to upload attachments (without captcha), and return rowid. Here is possible DDOS-attack, by large files, and maybe need captcha here, before uploading.
	small fix else if, not it's second if.
	return attachment from sqlite3 database.
SQLite3Methods.cs:
	Rewrite AddAttachment. Now it's public static int, and return rowid.
	Add public static void LinkSpecifiedAttachment
	Add public static void DeleteNotLinkedAttachments() to delete mistakely added attachments, which was been not related to any message.
	rewrite AddMessage, now it's accept attached_files (param_value)
	Link attachments according attached_files-values
	line 355 - add log of request, but comment it.		//	PISDA.PISDA.Log("request: "+request);
	delete unused code, and smallfixes;
changes.txt - update this changes.
___________________________________________________

Modify HttpResonse.cs and SQLite3Methods.cs
to display messages

___________________________________________________
Add 9 files to support captcha:
	\BitmapConvert.cs
	\ByteEncryptionUtil.cs
	\ByteStringExt.cs
	\Captcha.cs
	\CaptchaTracker.cs
	\FileUtil.cs
	\PostSignatureExt.cs
	\Salsa20.cs
	\Chaos.NaCl.dll
	
Compile.bat - compile with Chaos.NaCl.dll on windows
Compile.sh - compile with Chaos.NaCl.dll on linux with mono
TcpServer.cs - comment Console.WriteLine
TCPClientObject.cs - comment Console.WriteLine
SQLite3Methods.cs - exclude RandomCaptchaGuid and RandomCaptchaGuess
HttpRequest.cs:
	Add public static string DecodeQueryString(string QueryString)
	Add public static Dictionary<string, string> GetParamValue(string GET_STRING)
	Add comments
	Add param_value in Properties-object.
	
HttpForms.cs
	Remove public static string Decode(string str)
	Remove public static Dictionary<string, string> getArgs(string content)
	Add public static bool SaveMessage(Dictionary<string, string> message)
	Add public static bool SaveMessageSQLite3(Dictionary<string, string> message)
	
HttpResponse.cs
	Add public static string DecodeMessage(string message)
	Add public static bool UseCaptcha = true;
	Rewrite the rest to add supporting of captcha.


___________________________________________________
Add 7 files to support SQLite3 database:
	\Compile_PISDA.bat
	\Compile_SQLite3Methods.bat
	\feedback.sqlite3.sql
	\PISDA.cs
	\SQLite3Methods.cs
	\Mono.Data.Sqlite.dll
	\sqlite3.dll
HTTPServer.cs - open sqlite database or create this from "feedback.sqlite3.sql"
HttpResponse.cs - use HttpForms.SaveMessageSQLite3(content);
HttpRequest.cs - skip name=="attachments"
HttpForms.cs - add method public static void SaveMessageSQLite3(Dictionary<string, string> message)
Compile.bat - compile with Mono.Data.Sqlite.dll on windows
Compile.sh - to compile with Mono.Data.Sqlite.dll on linux with mono
___________________________________________________
HttpForms.cs - extract attachments in GetPostArgs method.
Add SaveMessage(Dictionary<string, string> message) - it's assept dictionary.

HttpResponse.cs - use HttpForms.SaveMessage(content); with dictionary
Add script to read files into dataURLs

Add /www/test_upload.html
___________________________________________________
Add feedback form in HttpResponse.cs
Add HttpForms.cs
Use value.ToString(); in HttpRequest.cs
Add folder "/messages/" to save messages there.
___________________________________________________
Add TcpUdpServer.cs
Change HTTPServer.cs, to run this.
Rewrite TCPClientObject.cs, show TCP there, instead of message, and return message, without UpperCase.
Add 4 files in ConsoleClients folder:
	TcpUdpClients.cs
	TcpUdpClients.bat
	TcpUdpClients.sh
	ConsoleTCPUDPClient.cs
	ConsoleTCPUDPClient.bat
	ConsoleTCPUDPClient.sh

Now it's TCP/UDP/HTTP Server, and TCP/UDP/HTTP-clients can be connected on the same port.
___________________________________________________

Rewrite TcpServer.cs, comment old code, and add new code from this source: https://metanit.com/sharp/net/4.3.php
Add file TCPClientObject.cs, with code, to handle connected client, in new Thread.
Rewrite TcpRequest.cs, comment old code, and add new code from that source.
Rewrite HttpRequest.cs, add methods to extract request-properties, and return this, as Dictionary.
Rewrite HttpResonse.cs, add method to add headers for response, and use this method to buidld response.
Add folder ConsoleClients, and put three files there:
	ConsoleClient.cs
	ConsoleClient.bat	- change port to 8082 here.
	ConsoleClient.sh	- change port to 8082 here.

Rewrite TcpResponse.cs, to return echo messages, from "ConsoleClient".
___________________________________________________

Split HTTPServer.cs to 6 files:
	TcpServer.cs
	HttpRequest.cs
	HttpResonse.cs
	HTTPServer.cs
	TcpRequest.cs
	TcpResponse.cs

Rewrite Compile.bat to build all files, with /main:HttpServer.HttpServer, on windows
Rewrite Compile.sh to build all files, with /main:HttpServer.HttpServer on linux, with mono

___________________________________________________
Return files from www-folder

Add method Combine to combine bytes of headers, and bytes of file-content.
Set port 8080 as default.
Read port from args[0], if port is specified (first argument).
Listen port on IPAddress.Any (0.0.0.0)
Show IP and PORT, after start server
If not root address, and if file exists - read file, and return file content as html-text, or as binary data;
Do not show response in console.log, because binary content not displaying correctly.

Compile.bat: run compiled HTTPServer.exe with another port 8082

Now, any file from "www/"-folder, can be downloaded there: http://127.0.0.1:8082/filename.extension

Add "test.html" and "test.txt" in 
http://127.0.0.1:8082/test.html
http://127.0.0.1:8082/test.txt

Add GetBytes.html
http://127.0.0.1:8082/GetBytes.html (return bytes of test.txt, in console.log)

___________________________________________________
Add Compile.bat to compile this server on windows.
Add Compile.sh to compile this server on linux, with mono.
___________________________________________________
source: https://gist.github.com/vvakame/2633887
